# Releases are triggered manually. This can be done by browsing to
# https://github.com/CycloneDX/cyclonedx-python/actions?query=workflow%3ARelease
# and selecting "Run workflow". If releasing a patch for a previous version
# make sure the correct branch is selected. It will default to the default
# branch.
name: Release

on:
  workflow_dispatch:

jobs:
  release:
    # https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482
    # limit this to being run on regular commits, not the commits that semantic-release will create
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    concurrency: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install poetry --upgrade pip
          poetry config virtualenvs.create false
          poetry install
      - name: View poetry version
        run: poetry --version

      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pypi_token: ${{ secrets.PYPI_TOKEN }}

#    - name: Package release
#      id: package_release
#      env:
#        REPO: cyclonedx/cyclonedx-python
#      run: |
#        VERSION=`cat VERSION`
#        echo "##[set-output name=version;]$VERSION"
#        python setup.py sdist bdist_wheel
#        docker build -f Dockerfile --build-arg VERSION=$VERSION -t $REPO:$VERSION -t $REPO:latest .

#
#    - name: Publish docker image
#      env:
#        REPO: cyclonedx/cyclonedx-python
#        DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
#      run: |
#        VERSION=`cat VERSION`
#        docker login --username coderpatros --password "$DOCKER_TOKEN"
#        docker push $REPO:latest
#        docker push $REPO:${{ steps.package_release.outputs.version }}
