# This workflow is used for publishing the PyPI package and Docker image.
#
# Before triggering a release the `VERSION` file should be updated in the
# relevant branch.
#
# When commiting the version change in `VERSION` the commit message is
# important as it will be used for the release in GitHub.
#
# For an example commit browse to
# https://github.com/CycloneDX/cyclonedx-dotnet/commit/d110af854371374460430bb8438225a7d7a84274.
# 
# The resulting release is here
# https://github.com/CycloneDX/cyclonedx-dotnet/releases/tag/v1.0.0.
#
# Releases are triggered manually. This can be done by browsing to
# https://github.com/CycloneDX/cyclonedx-python/actions?query=workflow%3ARelease
# and selecting "Run workflow". If releasing a patch for a previous version
# make sure the correct branch is selected. It will default to the default
# branch.
name: Release

on:
  workflow_dispatch

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v2.3.4
    - name: Set up Python 3.5
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.5
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install -r requirements.txt
    # The tests should have already been run during the PR workflow, so this is really just a sanity check
    - name: Test with tox+pytest
      run: |
        pip install tox
        tox

    - name: Package release
      id: package_release
      env:
        REPO: cyclonedx/cyclonedx-python
      run: |
        VERSION=`cat VERSION`
        echo "##[set-output name=version;]$VERSION"
        python setup.py sdist bdist_wheel
        docker build -f Dockerfile --build-arg VERSION=$VERSION -t $REPO:$VERSION -t $REPO:latest .
    
    - name: Publish package
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*

    - name: Publish docker image
      env:
        REPO: cyclonedx/cyclonedx-python
        DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      run: |
        VERSION=`cat VERSION`
        docker login --username coderpatros --password "$DOCKER_TOKEN"
        docker push $REPO:latest
        docker push $REPO:${{ steps.package_release.outputs.version }}
    
    - name: Create github release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_name: ${{ steps.package_release.outputs.version }}
        tag_name: v${{ steps.package_release.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload package to github release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/cyclonedx_bom-${{ steps.package_release.outputs.version }}-py2.py3-none-any.whl
        asset_name: cyclonedx_bom-${{ steps.package_release.outputs.version }}-py2.py3-none-any.whl
        asset_content_type: application/zip
