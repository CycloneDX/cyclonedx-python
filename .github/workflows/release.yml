# encoding: utf-8

# This file is part of CycloneDX Python
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# Copyright (c) OWASP Foundation. All Rights Reserved.

name: Release

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  PYTHON_VERISON: "3.10"
  POETRY_VERSION: "1.1.11"

jobs:
  release:
    # https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482
    # limit this to being run on regular commits, not the commits that semantic-release will create
    if: github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    concurrency: release
    steps:
      - name: Checkout code
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      - name: Setup python ${{ env.PYTHON_VERISON }}
        # see https://github.com/actions/setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERISON }}
      - name: Install poetry
        # see https://github.com/marketplace/actions/setup-poetry
        uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pypi_token: ${{ secrets.PYPI_TOKEN }}

      - name: Poetry build
        run: poetry build
      - name: get version
        run: poetry version -s

      - name: Build Docker Image
        env:
          REPO: cyclonedx/cyclonedx-python
        run: |
          VERSION=`poetry version -s`
          docker build -f Dockerfile --build-arg "VERSION=$VERSION" -t "$REPO:$VERSION" -t "$REPO:latest" .

      - name: Publish Docker Image(s)
        env:
          REPO: 'cyclonedx/cyclonedx-python'
        run: |
          VERSION=`poetry version -s`
          docker login --username '${{ secrets.DOCKERHUB_USERNAME }}' --password '${{ secrets.DOCKERHUB_TOKEN }}'
          docker push "$REPO:latest"
          docker push "$REPO:$VERSION"
