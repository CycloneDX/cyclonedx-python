<?xml version="1.0" ?>
<bom xmlns="http://cyclonedx.org/schema/bom/1.4" version="1">
  <metadata>
    <tools>
      <tool>
        <vendor>CycloneDX</vendor>
        <name>cyclonedx-py</name>
        <version>thisVersion-testing</version>
        <externalReferences>
          <reference type="build-system">
            <url>https://github.com/CycloneDX/cyclonedx-python/actions</url>
          </reference>
          <reference type="distribution">
            <url>https://pypi.org/project/cyclonedx-bom/</url>
          </reference>
          <reference type="documentation">
            <url>https://cyclonedx-bom-tool.readthedocs.io/</url>
          </reference>
          <reference type="issue-tracker">
            <url>https://github.com/CycloneDX/cyclonedx-python/issues</url>
          </reference>
          <reference type="license">
            <url>https://github.com/CycloneDX/cyclonedx-python/blob/main/LICENSE</url>
          </reference>
          <reference type="release-notes">
            <url>https://github.com/CycloneDX/cyclonedx-python/blob/main/CHANGELOG.md</url>
          </reference>
          <reference type="vcs">
            <url>https://github.com/CycloneDX/cyclonedx-python/</url>
          </reference>
          <reference type="website">
            <url>https://github.com/CycloneDX/cyclonedx-python/#readme</url>
          </reference>
        </externalReferences>
      </tool>
      <tool>
        <vendor>CycloneDX</vendor>
        <name>cyclonedx-python-lib</name>
        <version>libVersion-testing</version>
        <externalReferences><!-- stripped --></externalReferences>
      </tool>
    </tools>
    <component type="application" bom-ref="root-component">
      <name>with-extras</name>
      <version>0.1.0</version>
      <description>dependencies with license declaration according to PEP 639</description>
      <licenses>
        <expression>MIT OR GPL-2.0-or-later OR (FSFUL AND BSD-2-Clause)</expression>
      </licenses>
      <evidence>
        <licenses>
          <license>
            <name>declared license file: AUTHORS.example.bin</name>
            <text content-type="application/octet-stream" encoding="base64">dGhpcyBpcyBBVVRIT1JTLmV4YW1wbGUuYmluIGNvbnRlbnQK</text>
          </license>
          <license>
            <name>declared license file: LICENCE.dummy.bin</name>
            <text content-type="application/octet-stream" encoding="base64">dGhpcyBpcyBMSUNFTkNFLmR1bW15LmJpbiBjb250ZW50Cg==</text>
          </license>
          <license>
            <name>declared license file: LICENSE.txt.bin</name>
            <text content-type="application/octet-stream" encoding="base64">dGhpcyBpcyBMSUNFTlNFLnR4dC5iaW4gY29udGVudAo=</text>
          </license>
          <license>
            <name>declared license file: NOTICE.bin</name>
            <text content-type="application/octet-stream" encoding="base64">dGhpc2lzIHRoZSBjb250ZW50IG9mIHRoZSBOT1RJQ0UuYmluIGZpbGUuCg==</text>
          </license>
          <license>
            <name>declared license file: licenses_a/LICENSE.CC0.bin</name>
            <text content-type="application/octet-stream" encoding="base64">dGhpcyBpcyBsaWNlbnNlc19hL0xJQ0VOU0UuQ0MwLmJpbiBjb250ZW50Cg==</text>
          </license>
          <license>
            <name>declared license file: licenses_a/LICENSE.MIT.bin</name>
            <text content-type="application/octet-stream" encoding="base64">dGhpcyBpcyBsaWNlbnNlc19hL0xJQ0VOU0UuTUlULmJpbiBjb250ZW50Cg==</text>
          </license>
          <license>
            <name>declared license file: licenses_b/LICENSE.md.bin</name>
            <text content-type="application/octet-stream" encoding="base64">dGhpcyBpcyBsaWNlbnNlc19iL0xJQ0VOU0UubWQuYmluIGNvbnRlbnQK</text>
          </license>
          <license>
            <name>declared license file: licenses_b/legal/NOTICE.txt.bin</name>
            <text content-type="application/octet-stream" encoding="base64">dGhpcyBpcyB0aGUgY29udGVudCBvZiBsaWNlbnNlc19iL2xlZ2FsL05PVElDRS50eHQuYmluIGZpbGUuIGl0IGlzIGV4cGVjdGVkIHRvIGJlIGRldGVjdGVkLgo=</text>
          </license>
        </licenses>
      </evidence>
    </component>
    <properties>
      <property name="cdx:reproducible">true</property>
    </properties>
  </metadata>
  <components>
    <component type="library" bom-ref="attrs==23.2.0">
      <name>attrs</name>
      <version>23.2.0</version>
      <description>Classes Without Boilerplate</description>
      <licenses>
        <license>
          <id>MIT</id>
        </license>
      </licenses>
      <purl>pkg:pypi/attrs@23.2.0</purl>
      <externalReferences>
        <reference type="documentation">
          <url>https://www.attrs.org/</url>
          <comment>from packaging metadata Project-URL: Documentation</comment>
        </reference>
        <reference type="other">
          <url>https://github.com/sponsors/hynek</url>
          <comment>from packaging metadata Project-URL: Funding</comment>
        </reference>
        <reference type="other">
          <url>https://tidelift.com/subscription/pkg/pypi-attrs?utm_source=pypi-attrs&amp;utm_medium=pypi</url>
          <comment>from packaging metadata Project-URL: Tidelift</comment>
        </reference>
        <reference type="release-notes">
          <url>https://www.attrs.org/en/stable/changelog.html</url>
          <comment>from packaging metadata Project-URL: Changelog</comment>
        </reference>
        <reference type="vcs">
          <url>https://github.com/python-attrs/attrs</url>
          <comment>from packaging metadata Project-URL: GitHub</comment>
        </reference>
      </externalReferences>
    </component>
    <component type="library" bom-ref="boolean.py==4.0">
      <name>boolean.py</name>
      <version>4.0</version>
      <description>Define boolean algebras, create and parse boolean expressions and create custom boolean DSL.</description>
      <licenses>
        <license>
          <id>BSD-2-Clause</id>
        </license>
        <license>
          <name>declared license file: CHANGELOG.rst</name>
          <text content-type="text/prs.fallenstein.rst" encoding="base64">CkNoYW5nZWxvZwo9PT09PT09PT0KCgpuZXh0Ci0tLS0KCgo0LjAgKDIwMjItMDUtMDUpCi0tLS0tLS0tLS0tLS0tLS0KCiogQVBJIGNoYW5nZXMKCiAqIERyb3Agc3VwcG9ydCBmb3IgUHl0aG9uIDIuCiAqIFRlc3Qgb24gUHl0aG9uIDMuMTAKICogTWFrZSBFeHByZXNzaW9uLnNvcnRfb3JkZXIgYW4gaW5zdGFuY2UgYXR0cmlidXRlcyBhbmQgbm90IGEgY2xhc3MgYXR0cmlidXRlCgoqIE1pc2MuCgogKiBDb3JyZWN0IGxpY2Vuc2luZyBkb2N1bWVudGF0aW9uCiAqIEltcHJvdmUgZG9jc3RyaW5nZiBhbmQgYXBwbHkgbWlub3IgcmVmYWN0b3JpbmdzCiAqIEFkb3B0IGJsYWNrIGNvZGUgc3R5bGUgYW5kIGlzb3J0IGZvciBpbXBvcnRzCiAqIERyb3AgVHJhdmlzIGFuZCB1c2UgR2l0SHViIGFjdGlvbnMgZm9yIENJCgoKMy44ICgyMDIwLTA2LTEwKQotLS0tLS0tLS0tLS0tLS0tCgoqIEFQSSBjaGFuZ2VzCgogKiBBZGQgc3VwcG9ydCBmb3IgZXZhbHVhdGlvbiBvZiBib29sZWFuIGV4cHJlc3Npb24uCiAgIFRoYW5rIHlvdSB0byBMYXJzIHZhbiBHZW1lcmRlbiBAZ2VtZXJkZW4KCiogQnVnIGZpeGVzCgogKiBGaXggcGFyc2luZyBvZiB0b2tlbnMgdGhhdCBoYXZlIGEgbnVtYmVyIGFzIHRoZSBmaXJzdCBjaGFyYWN0ZXIuIAogICBUaGFuayB5b3UgdG8gSmVmZiBDb2hlbiBAIGpjb2hlbjI4CiAqIFJlc3RvcmUgcHJvcGVyIFB5dGhvbiAyIGNvbXBhdGliaWxpdHkuIAogICBUaGFuayB5b3UgdG8gQmVuankgV2VpbmJlcmdlciBAYmVuanl3CgoqIEltcHJvdmUgZG9jdW1lbnRhdGlvbgoKICogQWRkIHBvaW50ZXJzIHRvIExpbnV4IGRpc3RybyBwYWNrYWdlcy4KICAgVGhhbmsgeW91IHRvIE1heCBNZWhsIEBteG1laGwgYW5kIENhcm1lbiBCaWFuY2EgQmFra2VyIEBjYXJtZW5iaWFuY2EKICogRml4IHR5cG8uCiAgIFRoYW5rIHlvdSB0byBHYWJyaWVsIE5pZWJsZXIgQGRlci1nYWJlCgoKMy43ICgyMDE5LTEwLTA0KQotLS0tLS0tLS0tLS0tLS0tCgoqIEFQSSBjaGFuZ2VzCgogKiBBZGQgbmV3IHNvcnQgYXJndW1lbnQgdG8gc2ltcGxpZnkoKSB0byBvcHRpb25hbGx5IG5vdCBzb3J0IHdoZW4gc2ltcGxpZnlpbmcKICAgZXhwcmVzc2lvbnMgKGUuZy4gbm90IGFwcGx5aW5nICJjb21tdXRhdGl2aXR5IikuIFRoYW5rIHlvdSB0byBTdGV2ZW4gRXNzZXIKICAgQG1hanVyZyBmb3IgdGhpcwogKiBBZGQgbmV3IGFyZ3VtZW50IHRvIHRva2VuaXplciB0byBvcHRpb25hbGx5IGFjY2VwdCBleHRyYSBjaGFyYWN0ZXJzIGluIHN5bWJvbAogICB0b2tlbnMuIFRoYW5rIHlvdSB0byBAY2FycGllIGZvciB0aGlzCgoKMy42ICgyMDE4LTA4LTA2KQotLS0tLS0tLS0tLS0tLS0tCgoqIE5vIEFQSSBjaGFuZ2VzCgoqIEJ1ZyBmaXhlcwoKICogRml4IERlIE1vcmdhbidzIGxhd3MgZWZmZWN0IG9uIGRvdWJsZSBuZWdhdGlvbiBwcm9wb3NpdGlvbnMuIFRoYW5rIHlvdSB0byBEb3VnbGFzIENhcmRvc28gZm9yIHRoaXMKICogSW1wcm92ZSBlcnJvciBjaGVja2luZyB3aGVuIHBhcnNpbmcKCgozLjUgKE5vdiAxLCAyMDE3KQotLS0tLS0tLS0tLS0tLS0tLQoKKiBObyBBUEkgY2hhbmdlcwoKKiBCdWcgZml4ZXMKCiAqIERvY3VtZW50YXRpb24gdXBkYXRlcyBhbmQgYWRkIHRlc3RpbmcgZm9yIFB5dGhvbiAzLjYuIFRoYW5rIHlvdSB0byBBbGV4YW5kZXIgTGlzaWFub2kgQGFsaXNpYW5vaQogKiBJbXByb3ZlIHRlc3RuZyBhbmQgZXhwcmVzc2lvbiBlcXVpdmFsZW5jZSBjaGVja3MKICogSW1wcm92ZSBzdWJzKCkgbWV0aG9kIHRvIGFuIGV4cHJlc3Npb24gCgogCgozLjQgKE1heSAxMiwgMjAxNykKLS0tLS0tLS0tLS0tLS0tLS0tCgoqIE5vIEFQSSBjaGFuZ2VzCgoqIEJ1ZyBmaXhlcyBhbmQgaW1wcm92ZW1lbnRzCgogKiBGaXggdmFyaW91cyBkb2N1bWVudGF0aW9uIHR5cG9zIGFuZCBpbXByb3ZlIHRlc3RzIC4gVGhhbmsgeW91IHRvIEFsZXhhbmRlciBMaXNpYW5vaSBAYWxpc2lhbm9pCiAqIEZpeCBoYW5kbGluZyBmb3IgbGl0ZXJhbHMgdnMuIHN5bWJvbHMgaW4gbmVnYXRpb25zIFRoYW5rIHlvdSB0byBAWWFyb25LCgoKMy4zICgyMDE3LTAyLTA5KQotLS0tLS0tLS0tLS0tLS0tCgoqIEFQSSBjaGFuZ2VzCgogKiAjNDAgYW5kICM1MCBFeHByZXNzaW9uLnN1YnMoKSBub3cgdGFrZXMgJ2RlZmF1bHQnIHRoYW5rcyB0byBAa3JvbnV6CiAqICM0NSBzaW1wbGlmeT1GYWxzZSBpcyBub3cgdGhlIGRlZmF1bHQgZm9yIHBhcnNlIGFuZCByZWxhdGVkIGZ1bmN0aW9ucyBvciBtZXRob2RzLgogKiAjNDAgVXNlICImIiBhbmQgInwiIGFzIGRlZmF1bHQgb3BlcmF0b3JzCgoqIEJ1ZyBmaXhlcwoKICogIzYwIEZpeCBidWcgZm9yICJhIG9yIGIgYyIgd2hpY2ggaXMgbm90IGEgdmFsaWQgZXhwcmVzc2lvbgogKiAjNTggRml4IG1hdGggZm9ybXVsYSBkaXNwbGF5IGluIGRvY3MKICogSW1wcm92ZSBoYW5kbGluZyBvZiBwYXJzZSBlcnJvcnMKCgoyLjAuMCAoMjAxNi0wNS0xMSkKLS0tLS0tLS0tLS0tLS0tLS0tCgoqIEFQSSBjaGFuZ2VzCgogKiBOZXcgYWxnZWJyYSBkZWZpbml0aW9uLiBSZWZhY3RvcmVkIGNsYXNzIGhpZXJhcmNoeS4gSW1wcm92ZWQgcGFyc2luZy4KCiogTmV3IGZlYXR1cmVzCgogKiBwb3NzaWJpbGl0eSB0byBzdWJjbGFzcyBhbGdlYnJhIGRlZmluaXRpb24KICogbmV3IG5vcm1hbCBmb3JtcyBzaG9ydGN1dHMgZm9yIERORiBhbmQgQ05GLgoKCjEuMSAoMjAxNi0wNC0wNikKLS0tLS0tLS0tLS0tLS0tLS0tCgoqIEluaXRpYWwgcmVsZWFzZSBvbiBQeXBpLgo=</text>
        </license>
        <license>
          <name>declared license file: LICENSE.txt</name>
          <text content-type="text/plain" encoding="base64">Q29weXJpZ2h0IChjKSBTZWJhc3RpYW4gS3JhZW1lciwgYmFzdGkua3JAZ21haWwuY29tIGFuZCBvdGhlcnMKQWxsIHJpZ2h0cyByZXNlcnZlZC4KClJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dCBtb2RpZmljYXRpb24sCmFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDoKCjEuIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcwpsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lci4KCjIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwKdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvbiBhbmQvb3IKb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4KClRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgIkFTIElTIiBBTkQKQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRUQKV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRQpESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIEhPTERFUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUgpBTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMKKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOwpMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04KQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQKKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMKU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuCg==</text>
        </license>
        <license>
          <name>declared license file: README.rst</name>
          <text content-type="text/prs.fallenstein.rst" encoding="base64">Ym9vbGVhbi5weQo9PT09PT09PT09CgoiYm9vbGVhbi5weSIgaXMgYSBzbWFsbCBsaWJyYXJ5IGltcGxlbWVudGluZyBhIGJvb2xlYW4gYWxnZWJyYS4gSXQKZGVmaW5lcyB0d28gYmFzZSBlbGVtZW50cywgVFJVRSBhbmQgRkFMU0UsIGFuZCBhIFN5bWJvbCBjbGFzcyB0aGF0IGNhbgp0YWtlIG9uIG9uZSBvZiB0aGVzZSB0d28gdmFsdWVzLiBDYWxjdWxhdGlvbnMgYXJlIGRvbmUgaW4gdGVybXMgb2YgQU5ELApPUiBhbmQgTk9UIC0gb3RoZXIgY29tcG9zaXRpb25zIGxpa2UgWE9SIGFuZCBOQU5EIGFyZSBub3QgaW1wbGVtZW50ZWQKYnV0IGNhbiBiZSBlbXVsYXRlZCB3aXRoIEFORCBvciBhbmQgTk9ULiBFeHByZXNzaW9ucyBhcmUgY29uc3RydWN0ZWQKZnJvbSBwYXJzZWQgc3RyaW5ncyBvciBpbiBQeXRob24uCgpJdCBydW5zIG9uIFB5dGhvbiAzLjYrCllvdSBjYW4gdXNlIG9sZGVyIHZlcnNpb24gMy54IGZvciBQeXRob24gMi43KyBzdXBwb3J0LgoKaHR0cHM6Ly9naXRodWIuY29tL2Jhc3Rpa3IvYm9vbGVhbi5weQoKQnVpbGQgc3RhdHVzOiB8QnVpbGQgU3RhdHVzfAoKCkV4YW1wbGUKLS0tLS0tLQoKOjoKCiAgICA+Pj4gaW1wb3J0IGJvb2xlYW4KICAgID4+PiBhbGdlYnJhID0gYm9vbGVhbi5Cb29sZWFuQWxnZWJyYSgpCiAgICA+Pj4gZXhwcmVzc2lvbjEgPSBhbGdlYnJhLnBhcnNlKHUnYXBwbGUgYW5kIChvcmFuZ2VzIG9yIGJhbmFuYSkgYW5kIG5vdCBiYW5hbmEnLCBzaW1wbGlmeT1GYWxzZSkKICAgID4+PiBleHByZXNzaW9uMQogICAgQU5EKFN5bWJvbCgnYXBwbGUnKSwgT1IoU3ltYm9sKCdvcmFuZ2VzJyksIFN5bWJvbCgnYmFuYW5hJykpLCBOT1QoU3ltYm9sKCdiYW5hbmEnKSkpCgogICAgPj4+IGV4cHJlc3Npb24yID0gYWxnZWJyYS5wYXJzZSgnKG9yYW5nZXMgfCBiYW5hbmEpIGFuZCBub3QgYmFuYW5hICYgYXBwbGUnLCBzaW1wbGlmeT1UcnVlKQogICAgPj4+IGV4cHJlc3Npb24yCiAgICBBTkQoU3ltYm9sKCdhcHBsZScpLCBOT1QoU3ltYm9sKCdiYW5hbmEnKSksIFN5bWJvbCgnb3JhbmdlcycpKQoKICAgID4+PiBleHByZXNzaW9uMSA9PSBleHByZXNzaW9uMgogICAgRmFsc2UKICAgID4+PiBleHByZXNzaW9uMS5zaW1wbGlmeSgpID09IGV4cHJlc3Npb24yCiAgICBUcnVlCgoKRG9jdW1lbnRhdGlvbgotLS0tLS0tLS0tLS0tCgpodHRwOi8vcmVhZHRoZWRvY3Mub3JnL2RvY3MvYm9vbGVhbnB5L2VuL2xhdGVzdC8KCgpJbnN0YWxsYXRpb24KLS0tLS0tLS0tLS0tCgpJbnN0YWxsYXRpb24gdmlhIHBpcAp+fn5+fn5+fn5+fn5+fn5+fn5+fgoKVG8gaW5zdGFsbCBib29sZWFuLnB5LCB5b3UgbmVlZCB0byBoYXZlIHRoZSBmb2xsb3dpbmcgcGllY2VzIG9mIHNvZnR3YXJlCm9uIHlvdXIgY29tcHV0ZXI6CgotICBQeXRob24gMy42KwotICBwaXAKCllvdSB0aGVuIG9ubHkgbmVlZCB0byBydW4gdGhlIGZvbGxvd2luZyBjb21tYW5kOgoKYGBwaXAgaW5zdGFsbCBib29sZWFuLnB5YGAKCgpJbnN0YWxsYXRpb24gdmlhIHBhY2thZ2UgbWFuYWdlcnMKfn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+CgpUaGVyZSBhcmUgcGFja2FnZXMgYXZhaWxhYmxlIGZvciBlYXN5IGluc3RhbGwgb24gc29tZSBvcGVyYXRpbmcgc3lzdGVtcy4KWW91IGFyZSB3ZWxjb21lIHRvIGhlbHAgdXMgcGFja2FnZSB0aGlzIHRvb2wgZm9yIG1vcmUgZGlzdHJpYnV0aW9ucyEKCi0gIGJvb2xlYW4ucHkgaGFzIGJlZW4gcGFja2FnZWQgYXMgQXJjaCBMaW51eCwgRmVkb3JhLCBvcGVuU3VzLAogICBuaXhwa2dzLCBHdWl4LCBEcmFnb25GbHkgYW5kIEZyZWVCU0QgCiAgIGBwYWNrYWdlcyA8aHR0cHM6Ly9yZXBvbG9neS5vcmcvcHJvamVjdC9weXRob246Ym9vbGVhbi5weS92ZXJzaW9ucz5gX18gLgoKSW4gcGFydGljdWxhcjoKCi0gIEFyY2ggTGludXggKEFVUik6CiAgIGBweXRob24tYm9vbGVhbi5weSA8aHR0cHM6Ly9hdXIuYXJjaGxpbnV4Lm9yZy9wYWNrYWdlcy9weXRob24tYm9vbGVhbi5weS8+YF9fCi0gIEZlZG9yYToKICAgYHB5dGhvbi1ib29sZWFuLnB5IDxodHRwczovL2FwcHMuZmVkb3JhcHJvamVjdC5vcmcvcGFja2FnZXMvcHl0aG9uLWJvb2xlYW4ucHk+YF9fCi0gIG9wZW5TVVNFOgogICBgcHl0aG9uLWJvb2xlYW4ucHkgPGh0dHBzOi8vc29mdHdhcmUub3BlbnN1c2Uub3JnL3BhY2thZ2UvcHl0aG9uLWJvb2xlYW4ucHk+YF9fCgoKVGVzdGluZwotLS0tLS0tCgpUZXN0IGBgYm9vbGVhbi5weWBgIHdpdGggeW91ciBjdXJyZW50IFB5dGhvbiBlbnZpcm9ubWVudDoKCmBgcHl0aG9uIHNldHVwLnB5IHRlc3RgYAoKVGVzdCB3aXRoIGFsbCBvZiB0aGUgc3VwcG9ydGVkIFB5dGhvbiBlbnZpcm9ubWVudHMgdXNpbmcgYGB0b3hgYDoKCjo6CgogICAgcGlwIGluc3RhbGwgLXIgcmVxdWlyZW1lbnRzLWRldi50eHQKICAgIHRveAoKSWYgYGB0b3hgYCB0aHJvd3MgYGBJbnRlcnByZXRlck5vdEZvdW5kYGAsIGxpbWl0IGl0IHRvIHB5dGhvbgppbnRlcnByZXRlcnMgdGhhdCBhcmUgYWN0dWFsbHkgaW5zdGFsbGVkIG9uIHlvdXIgbWFjaGluZToKCjo6CgogICAgdG94IC1lIHB5MzYKCkFsdGVybmF0aXZlbHkgdXNlIHB5dGVzdC4KCgpMaWNlbnNlCi0tLS0tLS0KCkNvcHlyaWdodCAoYykgU2ViYXN0aWFuIEtyYWVtZXIsIGJhc3RpLmtyQGdtYWlsLmNvbSBhbmQgb3RoZXJzClNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBCU0QtMi1DbGF1c2UKCi4uIHxCdWlsZCBTdGF0dXN8IGltYWdlOjogaHR0cHM6Ly90cmF2aXMtY2kub3JnL2Jhc3Rpa3IvYm9vbGVhbi5weS5zdmc/YnJhbmNoPW1hc3RlcgogICA6dGFyZ2V0OiBodHRwczovL3RyYXZpcy1jaS5vcmcvYmFzdGlrci9ib29sZWFuLnB5Cg==</text>
        </license>
      </licenses>
      <purl>pkg:pypi/boolean.py@4.0</purl>
      <externalReferences>
        <reference type="website">
          <url>https://github.com/bastikr/boolean.py</url>
          <comment>from packaging metadata: Home-page</comment>
        </reference>
      </externalReferences>
    </component>
    <component type="library" bom-ref="chardet==5.2.0">
      <name>chardet</name>
      <version>5.2.0</version>
      <description>Universal encoding detector for Python 3</description>
      <licenses>
        <license>
          <name>License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)</name>
        </license>
        <license>
          <name>declared license file: LICENSE</name>
          <text content-type="text/plain" encoding="base64"></text>
        </license>
        <license>
          <name>declared license of 'chardet'</name>
          <text content-type="text/plain">LGPL</text>
        </license>
      </licenses>
      <purl>pkg:pypi/chardet@5.2.0</purl>
      <externalReferences>
        <reference type="documentation">
          <url>https://chardet.readthedocs.io/</url>
          <comment>from packaging metadata Project-URL: Documentation</comment>
        </reference>
        <reference type="issue-tracker">
          <url>https://github.com/chardet/chardet/issues</url>
          <comment>from packaging metadata Project-URL: Issue Tracker</comment>
        </reference>
        <reference type="other">
          <url>https://github.com/chardet/chardet</url>
          <comment>from packaging metadata Project-URL: GitHub Project</comment>
        </reference>
        <reference type="website">
          <url>https://github.com/chardet/chardet</url>
          <comment>from packaging metadata: Home-page</comment>
        </reference>
      </externalReferences>
    </component>
    <component type="library" bom-ref="cryptography==43.0.1">
      <name>cryptography</name>
      <version>43.0.1</version>
      <description>cryptography is a package which provides cryptographic recipes and primitives to Python developers.</description>
      <licenses>
        <expression>Apache-2.0 OR BSD-3-Clause</expression>
      </licenses>
      <purl>pkg:pypi/cryptography@43.0.1</purl>
      <externalReferences>
        <reference type="documentation">
          <url>https://cryptography.io/</url>
          <comment>from packaging metadata Project-URL: documentation</comment>
        </reference>
        <reference type="issue-tracker">
          <url>https://github.com/pyca/cryptography/issues</url>
          <comment>from packaging metadata Project-URL: issues</comment>
        </reference>
        <reference type="other">
          <url>https://github.com/pyca/cryptography/</url>
          <comment>from packaging metadata Project-URL: source</comment>
        </reference>
        <reference type="release-notes">
          <url>https://cryptography.io/en/latest/changelog/</url>
          <comment>from packaging metadata Project-URL: changelog</comment>
        </reference>
        <reference type="website">
          <url>https://github.com/pyca/cryptography</url>
          <comment>from packaging metadata Project-URL: homepage</comment>
        </reference>
      </externalReferences>
      <evidence>
        <licenses>
          <license>
            <name>License :: OSI Approved :: Apache Software License</name>
          </license>
          <license>
            <name>License :: OSI Approved :: BSD License</name>
          </license>
        </licenses>
      </evidence>
    </component>
    <component type="library" bom-ref="jsonpointer==2.4">
      <name>jsonpointer</name>
      <version>2.4</version>
      <description>Identify specific nodes in a JSON document (RFC 6901) </description>
      <licenses>
        <license>
          <name>License :: OSI Approved :: BSD License</name>
        </license>
        <license>
          <name>declared license file: AUTHORS</name>
          <text content-type="text/plain" encoding="base64">U3RlZmFuIEvDtmdsIDxzdGVmYW5Ac2tvZWdsLm5ldD4KQWxleGFuZGVyIFNob3JpbiA8a3hlcGFsQGdtYWlsLmNvbT4KQ2hyaXN0b3BoZXIgSi4gV2hpdGUgPGNocmlzQGdyaWVyd2hpdGUuY29tPgo=</text>
        </license>
        <license>
          <name>declared license file: LICENSE.txt</name>
          <text content-type="text/plain" encoding="base64">Q29weXJpZ2h0IChjKSAyMDExIFN0ZWZhbiBLw7ZnbCA8c3RlZmFuQHNrb2VnbC5uZXQ+CkFsbCByaWdodHMgcmVzZXJ2ZWQuCgpSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXQKbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zCmFyZSBtZXQ6CgoxLiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodAogICBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuCjIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0CiAgIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUKICAgZG9jdW1lbnRhdGlvbiBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4KMy4gVGhlIG5hbWUgb2YgdGhlIGF1dGhvciBtYXkgbm90IGJlIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzCiAgIGRlcml2ZWQgZnJvbSB0aGlzIHNvZnR3YXJlIHdpdGhvdXQgc3BlY2lmaWMgcHJpb3Igd3JpdHRlbiBwZXJtaXNzaW9uLgoKVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQVVUSE9SIGBgQVMgSVMnJyBBTkQgQU5ZIEVYUFJFU1MgT1IKSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRUQgV0FSUkFOVElFUwpPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELgpJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsCklOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIChJTkNMVURJTkcsIEJVVApOT1QgTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUzsgTE9TUyBPRiBVU0UsCkRBVEEsIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWQpUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLCBPUiBUT1JUCihJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRgpUSElTIFNPRlRXQVJFLCBFVkVOIElGIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLgoK</text>
        </license>
        <license>
          <name>declared license of 'jsonpointer'</name>
          <text content-type="text/plain">Modified BSD License</text>
        </license>
      </licenses>
      <purl>pkg:pypi/jsonpointer@2.4</purl>
      <externalReferences>
        <reference type="website">
          <url>https://github.com/stefankoegl/python-json-pointer</url>
          <comment>from packaging metadata: Home-page</comment>
        </reference>
      </externalReferences>
    </component>
    <component type="library" bom-ref="license-expression==30.3.0">
      <name>license-expression</name>
      <version>30.3.0</version>
      <description>license-expression is a comprehensive utility library to parse, compare, simplify and normalize license expressions (such as SPDX license expressions) using boolean logic.</description>
      <licenses>
        <license>
          <id>Apache-2.0</id>
        </license>
        <license>
          <name>declared license file: AUTHORS.rst</name>
          <text content-type="text/prs.fallenstein.rst" encoding="base64">VGhlIGZvbGxvd2luZyBvcmdhbml6YXRpb25zIG9yIGluZGl2aWR1YWxzIGhhdmUgY29udHJpYnV0ZWQgdG8gdGhpcyBjb2RlOgoKLSBBeWFuIFNpbmhhIE1haGFwYXRyYSBAQXlhblNpbmhhTWFoYXBhdHJhCi0gQ2FybWVuIEJpYW5jYSBCYWtrZXIgQGNhcm1lbmJpYW5jYQotIENoaW4tWWV1bmcgTGkgQGNoaW55ZXVuZ2xpCi0gRGVubmlzIENsYXJrIEBEZW5uaXNDbGFyawotIEpvaG4gSG9yYW4gQGpvaG5taG9yYW4KLSBKb25vIFlhbmcgQEpvbm9ZYW5nCi0gTWF4IE1laGwgQG14bWVobAotIG5leEIgSW5jLiBAbmV4QgotIFBldGVyIEtvbGJ1cyBAcGtvbGJ1cwotIFBoaWxpcHBlIE9tYnJlZGFubmUgQHBvbWJyZWRhbm5lCi0gU2ViYXN0aWFuIFNjaHViZXJ0aCBAc3NjaHViZXJ0aAotIFN0ZXZlbiBFc3NlciBAbWFqdXJnCi0gVGhvbWFzIERydWV6IEB0ZHJ1ZXoK</text>
        </license>
        <license>
          <name>declared license file: CHANGELOG.rst</name>
          <text content-type="text/prs.fallenstein.rst" encoding="base64">Q2hhbmdlbG9nCj09PT09PT09PQoKdjMwLjMuMCAtIDIwMjQtMDMtMTgKLS0tLS0tLS0tLS0tLS0tLS0tLS0KClRoaXMgaXMgYSBtaW5vciByZWxlYXNlIHdpdGhvdXQgQVBJIGNoYW5nZXM6CgotIFVzZSBsYXRlc3Qgc2tlbGV0b24KLSBVcGRhdGUgbGljZW5zZSBsaXN0IHRvIGxhdGVzdCBTY2FuQ29kZSBhbmQgU1BEWCAzLjIzCi0gRHJvcCBzdXBwb3J0IGZvciBQeXRob24gMy43Cgp2MzAuMi4wIC0gMjAyMy0xMS0yOQotLS0tLS0tLS0tLS0tLS0tLS0tLQoKVGhpcyBpcyBhIG1pbm9yIHJlbGVhc2Ugd2l0aG91dCBBUEkgY2hhbmdlczoKCi0gVXNlIGxhdGVzdCBza2VsZXRvbgotIFVwZGF0ZSBsaWNlbnNlIGxpc3QgdG8gbGF0ZXN0IFNjYW5Db2RlIGFuZCBTUERYIDMuMjIKLSBBZGQgUHl0aG9uIDMuMTIgc3VwcG9ydCBpbiBDSQoKCnYzMC4xLjEgLSAyMDIzLTAxLTE2Ci0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KClRoaXMgaXMgYSBtaW5vciBkb3QgcmVsZWFzZSB3aXRob3V0IEFQSSBjaGFuZ2VzCgotIFVzZSBsYXRlc3Qgc2tlbGV0b24KLSBVcGRhdGUgbGljZW5zZSBsaXN0IHRvIGxhdGVzdCBTY2FuQ29kZSBhbmQgU1BEWCAzLjIwCgoKdjMwLjEuMCAtIDIwMjMtMDEtMTYKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKVGhpcyBpcyBhIG1pbm9yIHJlbGVhc2Ugd2l0aG91dCBBUEkgY2hhbmdlcwoKLSBVc2UgbGF0ZXN0IHNrZWxldG9uIChhbmQgdXBkYXRlZCBjb25maWd1cmUgc2NyaXB0KQotIFVwZGF0ZSBsaWNlbnNlIGxpc3QgdG8gbGF0ZXN0IFNjYW5Db2RlIGFuZCBTUERYIDMuMTkKLSBVc2UgY29ycmVjdCBzeW50YXggZm9yIHB5dGhvbl9yZXF1aXJlCi0gRHJvcCB1c2luZyBUcmF2aXMgYW5kIEFwcHZleW9yCi0gRHJvcCBzdXBwb3J0IGZvciBQeXRob24gMy43IGFuZCBhZGQgUHl0aG9uIDMuMTEgaW4gQ0kKCgp2MzAuMC4wIC0gMjAyMi0wNS0xMAotLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpUaGlzIGlzIGEgbWlub3IgcmVsZWFzZSB3aXRoIEFQSSBjaGFuZ2VzCgotIFVzZSBsYXRlc3Qgc2tlbGV0b24gKGFuZCB1cGRhdGVkIGNvbmZpZ3VyZSBzY3JpcHQpCi0gRHJvcCB1c2luZyBjYWx2ZXIKLSBJbXByb3ZlIGVycm9yIGNoZWNraW5nIHdoZW4gY29tYmluaW5nIGxpY2Vuc2VzCgoKCnYyMS42LjE0IC0gMjAyMS0wNi0xNAotLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpBZGRlZAp+fn5+fgoKLSBTd2l0Y2ggdG8gY2FsdmVyIGZvciBwYWNrYWdlIHZlcnNpb25pbmcgdG8gYmV0dGVyIGNvbnZleSB0aGUgY3VycmVuY3kgb2YgdGhlCiAgYnVuZGxlZCBkYXRhLgoKLSBJbmNsdWRlIGh0dHBzOi8vc2NhbmNvZGUtbGljZW5zZWRiLmFib3V0Y29kZS5vcmcvIGxpY2Vuc2VzIGxpc3Qgd2l0aAogIFNjYW5Db2RlICh2MjEuNi43KSBhbmQgU1BEWCBsaWNlbnNlcyAodjMuMTMpIGtleXMuIEFkZCBuZXcgZnVuY3Rpb25zIHRvCiAgY3JlYXRlIExpY2Vuc2luZyB1c2luZyB0aGVzZSBsaWNlbnNlcyBhcyBMaWNlbnNlU3ltYm9sLgoKLSBBZGQgbmV3IExpY2Vuc2UuZGVkdXAoKSBtZXRob2QgdG8gZGVkdXBsaWNhdGUgYW5kIHNpbXBsaWZ5IGxpY2Vuc2UgZXhwcmVzc2lvbnMKICB3aXRob3V0IG92ZXIgc2ltcGxpZnlpbmcuCgotIEFkZCBuZXcgTGljZW5zZS52YWxpZGF0ZSgpIG1ldGhvZCB0byByZXR1cm4gYSBuZXcgRXhwcmVzc2lvbkluZm8gb2JqZWN0IHdpdGgKICBkZXRhaWxzIG9uIGEgbGljZW5zZSBleHByZXNzaW9uIHZhbGlkYXRpb24uCgoKQ2hhbmdlZAp+fn5+fn5+Ci0gRHJvcCBzdXBwb3J0IGZvciBQeXRob24gMi4KLSBBZG9wdCB0aGUgcHJvamVjdCBza2VsZXRvbiBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9uZXhCL3NrZWxldG9uCiAgYW5kIGl0cyBuZXcgY29uZmlndXJlIHNjcmlwdAoKCnYxLjIgLSAyMDE5LTExLTE0Ci0tLS0tLS0tLS0tLS0tLS0tLQpBZGRlZAp+fn5+fgotIEFkZCBhYmlsaXR5IHRvIHJlbmRlciBXSVRIIGV4cHJlc3Npb24gd3JhcHBlZCBpbiBwYXJlbnRoZXNpcwoKRml4ZXMKfn5+fn4KLSBGaXggYW5vbWFsb3VzIGJhY2tzbGFzaGVzIGluIHN0cmluZ3MKCkNoYW5nZWQKfn5+fn5+fgotIFVwZGF0ZSB0aGUgdGhpcmRwYXJ0eSBkaXJlY3Rvcnkgc3RydWN0dXJlLgoKCnYxLjAgLSAyMDE5LTEwLTE2Ci0tLS0tLS0tLS0tLS0tLS0tLQpBZGRlZAp+fn5+fgotIE5ldyB2ZXJzaW9uIG9mIGJvb2xlYW4ucHkgbGlicmFyeQotIEFkZCBhYmlsaXR5IHRvIGxlYXZlIGxpY2Vuc2UgZXhwcmVzc2lvbnMgdW5zb3J0ZWQgd2hlbiBzaW1wbGlmeWluZwoKQ2hhbmdlZAp+fn5+fn5+Ci0gdXBkYXRlZCB0cmF2aXMgQ0kgc2V0dGluZ3MKCgp2MC45OTkgLSAyMDE5LTA0LTI5Ci0tLS0tLS0tLS0tLS0tLS0tLS0tCi0gSW5pdGlhbCByZWxlYXNlCi0gbGljZW5zZS1leHByZXNzaW9uIGlzIHNtYWxsIHV0aWxpdHkgbGlicmFyeSB0byBwYXJzZSwgY29tcGFyZSBhbmQKICBzaW1wbGlmeSBhbmQgbm9ybWFsaXplIGxpY2Vuc2UgZXhwcmVzc2lvbnMuCgo=</text>
        </license>
        <license>
          <name>declared license file: CODE_OF_CONDUCT.rst</name>
          <text content-type="text/prs.fallenstein.rst" encoding="base64">Q29udHJpYnV0b3IgQ292ZW5hbnQgQ29kZSBvZiBDb25kdWN0Cj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKT3VyIFBsZWRnZQotLS0tLS0tLS0tCgpJbiB0aGUgaW50ZXJlc3Qgb2YgZm9zdGVyaW5nIGFuIG9wZW4gYW5kIHdlbGNvbWluZyBlbnZpcm9ubWVudCwgd2UgYXMKY29udHJpYnV0b3JzIGFuZCBtYWludGFpbmVycyBwbGVkZ2UgdG8gbWFraW5nIHBhcnRpY2lwYXRpb24gaW4gb3VyCnByb2plY3QgYW5kIG91ciBjb21tdW5pdHkgYSBoYXJhc3NtZW50LWZyZWUgZXhwZXJpZW5jZSBmb3IgZXZlcnlvbmUsCnJlZ2FyZGxlc3Mgb2YgYWdlLCBib2R5IHNpemUsIGRpc2FiaWxpdHksIGV0aG5pY2l0eSwgZ2VuZGVyIGlkZW50aXR5IGFuZApleHByZXNzaW9uLCBsZXZlbCBvZiBleHBlcmllbmNlLCBlZHVjYXRpb24sIHNvY2lvLWVjb25vbWljIHN0YXR1cywKbmF0aW9uYWxpdHksIHBlcnNvbmFsIGFwcGVhcmFuY2UsIHJhY2UsIHJlbGlnaW9uLCBvciBzZXh1YWwgaWRlbnRpdHkgYW5kCm9yaWVudGF0aW9uLgoKT3VyIFN0YW5kYXJkcwotLS0tLS0tLS0tLS0tCgpFeGFtcGxlcyBvZiBiZWhhdmlvciB0aGF0IGNvbnRyaWJ1dGVzIHRvIGNyZWF0aW5nIGEgcG9zaXRpdmUgZW52aXJvbm1lbnQKaW5jbHVkZToKCi0gIFVzaW5nIHdlbGNvbWluZyBhbmQgaW5jbHVzaXZlIGxhbmd1YWdlCi0gIEJlaW5nIHJlc3BlY3RmdWwgb2YgZGlmZmVyaW5nIHZpZXdwb2ludHMgYW5kIGV4cGVyaWVuY2VzCi0gIEdyYWNlZnVsbHkgYWNjZXB0aW5nIGNvbnN0cnVjdGl2ZSBjcml0aWNpc20KLSAgRm9jdXNpbmcgb24gd2hhdCBpcyBiZXN0IGZvciB0aGUgY29tbXVuaXR5Ci0gIFNob3dpbmcgZW1wYXRoeSB0b3dhcmRzIG90aGVyIGNvbW11bml0eSBtZW1iZXJzCgpFeGFtcGxlcyBvZiB1bmFjY2VwdGFibGUgYmVoYXZpb3IgYnkgcGFydGljaXBhbnRzIGluY2x1ZGU6CgotICBUaGUgdXNlIG9mIHNleHVhbGl6ZWQgbGFuZ3VhZ2Ugb3IgaW1hZ2VyeSBhbmQgdW53ZWxjb21lIHNleHVhbAogICBhdHRlbnRpb24gb3IgYWR2YW5jZXMKLSAgVHJvbGxpbmcsIGluc3VsdGluZy9kZXJvZ2F0b3J5IGNvbW1lbnRzLCBhbmQgcGVyc29uYWwgb3IgcG9saXRpY2FsCiAgIGF0dGFja3MKLSAgUHVibGljIG9yIHByaXZhdGUgaGFyYXNzbWVudAotICBQdWJsaXNoaW5nIG90aGVyc+KAmSBwcml2YXRlIGluZm9ybWF0aW9uLCBzdWNoIGFzIGEgcGh5c2ljYWwgb3IKICAgZWxlY3Ryb25pYyBhZGRyZXNzLCB3aXRob3V0IGV4cGxpY2l0IHBlcm1pc3Npb24KLSAgT3RoZXIgY29uZHVjdCB3aGljaCBjb3VsZCByZWFzb25hYmx5IGJlIGNvbnNpZGVyZWQgaW5hcHByb3ByaWF0ZSBpbiBhCiAgIHByb2Zlc3Npb25hbCBzZXR0aW5nCgpPdXIgUmVzcG9uc2liaWxpdGllcwotLS0tLS0tLS0tLS0tLS0tLS0tLQoKUHJvamVjdCBtYWludGFpbmVycyBhcmUgcmVzcG9uc2libGUgZm9yIGNsYXJpZnlpbmcgdGhlIHN0YW5kYXJkcyBvZgphY2NlcHRhYmxlIGJlaGF2aW9yIGFuZCBhcmUgZXhwZWN0ZWQgdG8gdGFrZSBhcHByb3ByaWF0ZSBhbmQgZmFpcgpjb3JyZWN0aXZlIGFjdGlvbiBpbiByZXNwb25zZSB0byBhbnkgaW5zdGFuY2VzIG9mIHVuYWNjZXB0YWJsZSBiZWhhdmlvci4KClByb2plY3QgbWFpbnRhaW5lcnMgaGF2ZSB0aGUgcmlnaHQgYW5kIHJlc3BvbnNpYmlsaXR5IHRvIHJlbW92ZSwgZWRpdCwKb3IgcmVqZWN0IGNvbW1lbnRzLCBjb21taXRzLCBjb2RlLCB3aWtpIGVkaXRzLCBpc3N1ZXMsIGFuZCBvdGhlcgpjb250cmlidXRpb25zIHRoYXQgYXJlIG5vdCBhbGlnbmVkIHRvIHRoaXMgQ29kZSBvZiBDb25kdWN0LCBvciB0byBiYW4KdGVtcG9yYXJpbHkgb3IgcGVybWFuZW50bHkgYW55IGNvbnRyaWJ1dG9yIGZvciBvdGhlciBiZWhhdmlvcnMgdGhhdCB0aGV5CmRlZW0gaW5hcHByb3ByaWF0ZSwgdGhyZWF0ZW5pbmcsIG9mZmVuc2l2ZSwgb3IgaGFybWZ1bC4KClNjb3BlCi0tLS0tCgpUaGlzIENvZGUgb2YgQ29uZHVjdCBhcHBsaWVzIGJvdGggd2l0aGluIHByb2plY3Qgc3BhY2VzIGFuZCBpbiBwdWJsaWMKc3BhY2VzIHdoZW4gYW4gaW5kaXZpZHVhbCBpcyByZXByZXNlbnRpbmcgdGhlIHByb2plY3Qgb3IgaXRzIGNvbW11bml0eS4KRXhhbXBsZXMgb2YgcmVwcmVzZW50aW5nIGEgcHJvamVjdCBvciBjb21tdW5pdHkgaW5jbHVkZSB1c2luZyBhbgpvZmZpY2lhbCBwcm9qZWN0IGUtbWFpbCBhZGRyZXNzLCBwb3N0aW5nIHZpYSBhbiBvZmZpY2lhbCBzb2NpYWwgbWVkaWEKYWNjb3VudCwgb3IgYWN0aW5nIGFzIGFuIGFwcG9pbnRlZCByZXByZXNlbnRhdGl2ZSBhdCBhbiBvbmxpbmUgb3IKb2ZmbGluZSBldmVudC4gUmVwcmVzZW50YXRpb24gb2YgYSBwcm9qZWN0IG1heSBiZSBmdXJ0aGVyIGRlZmluZWQgYW5kCmNsYXJpZmllZCBieSBwcm9qZWN0IG1haW50YWluZXJzLgoKRW5mb3JjZW1lbnQKLS0tLS0tLS0tLS0KCkluc3RhbmNlcyBvZiBhYnVzaXZlLCBoYXJhc3NpbmcsIG9yIG90aGVyd2lzZSB1bmFjY2VwdGFibGUgYmVoYXZpb3IgbWF5CmJlIHJlcG9ydGVkIGJ5IGNvbnRhY3RpbmcgdGhlIHByb2plY3QgdGVhbSBhdCBwb21icmVkYW5uZUBnbWFpbC5jb20Kb3Igb24gdGhlIEdpdHRlciBjaGF0IGNoYW5uZWwgYXQgaHR0cHM6Ly9naXR0ZXIuaW0vYWJvdXRjb2RlLW9yZy9kaXNjdXNzIC4KQWxsIGNvbXBsYWludHMgd2lsbCBiZSByZXZpZXdlZCBhbmQgaW52ZXN0aWdhdGVkIGFuZCB3aWxsIHJlc3VsdCBpbiBhCnJlc3BvbnNlIHRoYXQgaXMgZGVlbWVkIG5lY2Vzc2FyeSBhbmQgYXBwcm9wcmlhdGUgdG8gdGhlIGNpcmN1bXN0YW5jZXMuClRoZSBwcm9qZWN0IHRlYW0gaXMgb2JsaWdhdGVkIHRvIG1haW50YWluIGNvbmZpZGVudGlhbGl0eSB3aXRoIHJlZ2FyZCB0bwp0aGUgcmVwb3J0ZXIgb2YgYW4gaW5jaWRlbnQuIEZ1cnRoZXIgZGV0YWlscyBvZiBzcGVjaWZpYyBlbmZvcmNlbWVudApwb2xpY2llcyBtYXkgYmUgcG9zdGVkIHNlcGFyYXRlbHkuCgpQcm9qZWN0IG1haW50YWluZXJzIHdobyBkbyBub3QgZm9sbG93IG9yIGVuZm9yY2UgdGhlIENvZGUgb2YgQ29uZHVjdCBpbgpnb29kIGZhaXRoIG1heSBmYWNlIHRlbXBvcmFyeSBvciBwZXJtYW5lbnQgcmVwZXJjdXNzaW9ucyBhcyBkZXRlcm1pbmVkCmJ5IG90aGVyIG1lbWJlcnMgb2YgdGhlIHByb2plY3TigJlzIGxlYWRlcnNoaXAuCgpBdHRyaWJ1dGlvbgotLS0tLS0tLS0tLQoKVGhpcyBDb2RlIG9mIENvbmR1Y3QgaXMgYWRhcHRlZCBmcm9tIHRoZSBgQ29udHJpYnV0b3IgQ292ZW5hbnRgXyAsCnZlcnNpb24gMS40LCBhdmFpbGFibGUgYXQKaHR0cHM6Ly93d3cuY29udHJpYnV0b3ItY292ZW5hbnQub3JnL3ZlcnNpb24vMS80L2NvZGUtb2YtY29uZHVjdC5odG1sCgouLiBfQ29udHJpYnV0b3IgQ292ZW5hbnQ6IGh0dHBzOi8vd3d3LmNvbnRyaWJ1dG9yLWNvdmVuYW50Lm9yZwo=</text>
        </license>
        <license>
          <name>declared license file: NOTICE</name>
          <text content-type="text/plain" encoding="base64">IwojIENvcHlyaWdodCAoYykgbmV4QiBJbmMuIGFuZCBvdGhlcnMuCiMgU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjAKIwojIFZpc2l0IGh0dHBzOi8vYWJvdXRjb2RlLm9yZyBhbmQgaHR0cHM6Ly9naXRodWIuY29tL25leEIvbGljZW5zZS1leHByZXNzaW9uCiMgZm9yIHN1cHBvcnQgYW5kIGRvd25sb2FkLgojCiMgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7CiMgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgojIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAojCiMgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAojCiMgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQojIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiMgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiMgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAojIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgojCg==</text>
        </license>
        <license>
          <name>declared license file: apache-2.0.LICENSE</name>
          <text content-type="text/plain" encoding="base64"></text>
        </license>
      </licenses>
      <purl>pkg:pypi/license-expression@30.3.0</purl>
      <externalReferences>
        <reference type="website">
          <url>https://github.com/nexB/license-expression</url>
          <comment>from packaging metadata: Home-page</comment>
        </reference>
      </externalReferences>
    </component>
    <component type="library" bom-ref="lxml==5.3.0">
      <name>lxml</name>
      <version>5.3.0</version>
      <description>Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API.</description>
      <licenses>
        <license>
          <id>BSD-3-Clause</id>
        </license>
        <license>
          <name>License :: OSI Approved :: BSD License</name>
        </license>
        <license>
          <name>declared license file: LICENSE.txt</name>
          <text content-type="text/plain" encoding="base64">Q29weXJpZ2h0IChjKSAyMDA0IEluZnJhZS4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KClJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dAptb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlCm1ldDoKCiAgMS4gUmVkaXN0cmlidXRpb25zIG9mIHNvdXJjZSBjb2RlIG11c3QgcmV0YWluIHRoZSBhYm92ZSBjb3B5cmlnaHQKICAgICBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuCiAgIAogIDIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0CiAgICAgbm90aWNlLCB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluCiAgICAgdGhlIGRvY3VtZW50YXRpb24gYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZQogICAgIGRpc3RyaWJ1dGlvbi4KCiAgMy4gTmVpdGhlciB0aGUgbmFtZSBvZiBJbmZyYWUgbm9yIHRoZSBuYW1lcyBvZiBpdHMgY29udHJpYnV0b3JzIG1heQogICAgIGJlIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzIGRlcml2ZWQgZnJvbSB0aGlzIHNvZnR3YXJlCiAgICAgd2l0aG91dCBzcGVjaWZpYyBwcmlvciB3cml0dGVuIHBlcm1pc3Npb24uCgpUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTCiJBUyBJUyIgQU5EIEFOWSBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UCkxJTUlURUQgVE8sIFRIRSBJTVBMSUVEIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUgpBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBUkUgRElTQ0xBSU1FRC4gSU4gTk8gRVZFTlQgU0hBTEwgSU5GUkFFIE9SCkNPTlRSSUJVVE9SUyBCRSBMSUFCTEUgRk9SIEFOWSBESVJFQ1QsIElORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLApFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sClBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IgU0VSVklDRVM7IExPU1MgT0YgVVNFLCBEQVRBLCBPUgpQUk9GSVRTOyBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVIgQ0FVU0VEIEFORCBPTiBBTlkgVEhFT1JZIE9GCkxJQUJJTElUWSwgV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HCk5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0UgT0YgVEhJUwpTT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS4K</text>
        </license>
        <license>
          <name>declared license file: LICENSES.txt</name>
          <text content-type="text/plain" encoding="base64">bHhtbCBpcyBjb3B5cmlnaHQgSW5mcmFlIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgQlNEIGxpY2Vuc2UgKHNlZQpkb2MvbGljZW5zZXMvQlNELnR4dCksIHdpdGggdGhlIGZvbGxvd2luZyBleGNlcHRpb25zOgoKU29tZSBjb2RlLCBzdWNoIGEgc2VsZnRlc3QucHksIHNlbGZ0ZXN0Mi5weSBhbmQKc3JjL2x4bWwvX2VsZW1lbnRwYXRoLnB5IGFyZSBkZXJpdmVkIGZyb20gRWxlbWVudFRyZWUgYW5kCmNFbGVtZW50VHJlZS4gU2VlIGRvYy9saWNlbnNlcy9lbGVtZW50dHJlZS50eHQgZm9yIHRoZSBsaWNlbnNlIHRleHQuCgpseG1sLmNzc3NlbGVjdCBhbmQgbHhtbC5odG1sIGFyZSBjb3B5cmlnaHQgSWFuIEJpY2tpbmcgYW5kIGRpc3RyaWJ1dGVkCnVuZGVyIHRoZSBCU0QgbGljZW5zZSAoc2VlIGRvYy9saWNlbnNlcy9CU0QudHh0KS4KCnRlc3QucHksIHRoZSB0ZXN0LXJ1bm5lciBzY3JpcHQsIGlzIEdQTCBhbmQgY29weXJpZ2h0IFNodXR0bGV3b3J0aApGb3VuZGF0aW9uLiBTZWUgZG9jL2xpY2Vuc2VzL0dQTC50eHQuIEl0IGlzIGJlbGlldmVkIHRoZSB1bmNoYW5nZWQKaW5jbHVzaW9uIG9mIHRlc3QucHkgdG8gcnVuIHRoZSB1bml0IHRlc3Qgc3VpdGUgZmFsbHMgdW5kZXIgdGhlCiJhZ2dyZWdhdGlvbiIgY2xhdXNlIG9mIHRoZSBHUEwgYW5kIHRodXMgZG9lcyBub3QgYWZmZWN0IHRoZSBsaWNlbnNlCm9mIHRoZSByZXN0IG9mIHRoZSBwYWNrYWdlLgoKVGhlIGlzb3NjaGVtYXRyb24gaW1wbGVtZW50YXRpb24gdXNlcyBzZXZlcmFsIFhTTCBhbmQgUmVsYXhORyByZXNvdXJjZXM6CiAqIFRoZSAoWE1MIHN5bnRheCkgUmVsYXhORyBzY2hlbWEgZm9yIHNjaGVtYXRyb24sIGNvcHlyaWdodCBJbnRlcm5hdGlvbmFsCiAgIE9yZ2FuaXphdGlvbiBmb3IgU3RhbmRhcmRpemF0aW9uIChzZWUgCiAgIHNyYy9seG1sL2lzb3NjaGVtYXRyb24vcmVzb3VyY2VzL3JuZy9pc28tc2NoZW1hdHJvbi5ybmcgZm9yIHRoZSBsaWNlbnNlCiAgIHRleHQpCiAqIFRoZSBza2VsZXRvbiBpc28tc2NoZW1hdHJvbi14bHQxIHB1cmUteHNsdCBzY2hlbWF0cm9uIGltcGxlbWVudGF0aW9uCiAgIHhzbCBzdHlsZXNoZWV0cywgY29weXJpZ2h0IFJpY2sgSmVsbGlmZmUgYW5kIEFjYWRlbWlhIFNpbmljYSBDb21wdXRpbmcKICAgQ2VudGVyLCBUYWl3YW4gKHNlZSB0aGUgeHNsIGZpbGVzIGhlcmUgZm9yIHRoZSBsaWNlbnNlIHRleHQ6IAogICBzcmMvbHhtbC9pc29zY2hlbWF0cm9uL3Jlc291cmNlcy94c2wvaXNvLXNjaGVtYXRyb24teHNsdDEvKQogKiBUaGUgeHNkL3JuZyBzY2hlbWEgc2NoZW1hdHJvbiBleHRyYWN0aW9uIHhzbCB0cmFuc2Zvcm1hdGlvbnMgYXJlIHVubGljZW5zZWQKICAgYW5kIGNvcHlyaWdodCB0aGUgcmVzcGVjdGl2ZSBhdXRob3JzIGFzIG5vdGVkIChzZWUgCiAgIHNyYy9seG1sL2lzb3NjaGVtYXRyb24vcmVzb3VyY2VzL3hzbC9STkcyU2NodHJuLnhzbCBhbmQKICAgc3JjL2x4bWwvaXNvc2NoZW1hdHJvbi9yZXNvdXJjZXMveHNsL1hTRDJTY2h0cm4ueHNsKQo=</text>
        </license>
      </licenses>
      <purl>pkg:pypi/lxml@5.3.0</purl>
      <externalReferences>
        <reference type="other">
          <url>https://github.com/lxml/lxml</url>
          <comment>from packaging metadata Project-URL: Source</comment>
        </reference>
        <reference type="website">
          <url>https://lxml.de/</url>
          <comment>from packaging metadata: Home-page</comment>
        </reference>
      </externalReferences>
    </component>
    <component type="library" bom-ref="regression-issue868==0.1">
      <name>regression-issue868</name>
      <version>0.1</version>
      <externalReferences>
        <reference type="distribution">
          <url>file://.../tests/_data/infiles/_helpers/local_pckages/with-license-pep639_regression-issue868</url>
          <comment>PackageSource: Local</comment>
        </reference>
      </externalReferences>
    </component>
  </components>
  <dependencies>
    <dependency ref="attrs==23.2.0"/>
    <dependency ref="boolean.py==4.0"/>
    <dependency ref="chardet==5.2.0"/>
    <dependency ref="cryptography==43.0.1"/>
    <dependency ref="jsonpointer==2.4"/>
    <dependency ref="license-expression==30.3.0">
      <dependency ref="boolean.py==4.0"/>
    </dependency>
    <dependency ref="lxml==5.3.0"/>
    <dependency ref="regression-issue868==0.1"/>
    <dependency ref="root-component">
      <dependency ref="attrs==23.2.0"/>
      <dependency ref="boolean.py==4.0"/>
      <dependency ref="cryptography==43.0.1"/>
      <dependency ref="jsonpointer==2.4"/>
      <dependency ref="license-expression==30.3.0"/>
      <dependency ref="lxml==5.3.0"/>
      <dependency ref="regression-issue868==0.1"/>
    </dependency>
  </dependencies>
</bom>
