[tool.poetry]
name = "cyclonedx-bom"
version = "3.0.0"
description = "CycloneDX Software Bill of Materials (SBOM) generation utility"
authors = ["Steven Springett <steve.springett@owasp.org>", "Paul Horton <phorton@sonatype.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/CycloneDX/cyclonedx-python"
repository = "https://github.com/CycloneDX/cyclonedx-python"
packages = [
    { include = "cyclonedx_py" }
]
include = [
    "LICENSE", "NOTICE"
]
classifiers = [
    # Trove classifiers - https://packaging.python.org/specifications/core-metadata/#metadata-classifier
    # Full list: https://pypi.python.org/pypi?%3Aaction=list_classifiers
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: Legal Industry',
    'Intended Audience :: System Administrators',
    'Topic :: Security',
    'Topic :: Software Development',
    'Topic :: System :: Software Distribution',
    'License :: OSI Approved :: Apache Software License',
    'Programming Language :: Python :: 3.6',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Typing :: Typed'
]

[tool.poetry.dependencies]
python = "^3.6"
cyclonedx-python-lib = ">= 2.0.0, < 3.0.0"

[tool.poetry.dev-dependencies]
autopep8 = "^1.6.0"
tox = "^3.24.3"
coverage = "^6.2"
mypy = "^0.931"
flake8 = "^4.0.1"
flake8-annotations = {version = "^2.7.0", python = ">= 3.6.2"}
flake8-bugbear = "^22.1.11"

[tool.poetry.scripts]
cyclonedx-bom = 'cyclonedx_py.client:main'
cyclonedx-py = 'cyclonedx_py.client:main'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
# https://python-semantic-release.readthedocs.io/en/latest/configuration.html
version_variable = [
    "pyproject.toml:version"
]
branch = "master"
upload_to_pypi = true
upload_to_repository = true
upload_to_release = true
build_command = "pip install poetry && poetry build"
remove_dist = false  # dist results required for some CI automation
